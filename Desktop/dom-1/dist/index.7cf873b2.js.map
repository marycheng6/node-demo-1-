{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\n    create(string) {\n      const container = document.createElement(\"template\");\n      container.innerHTML = string.trim();\n      return container.content.firstChild;\n    },\n    after(node, node2) {\n      node.parentNode.insertBefore(node2, node.nextSibling);\n    },\n    before(node, node2){\n      node.parentNode.insertBefore(node2, node);\n    },\n    append(parent, node){\n      parent.appendChild(node)\n    },\n    wrap(node, parent){\n      dom.before(node, parent)\n      dom.append(parent, node)\n    },\n    remove(node){\n      node.parentNode.removeChild(node)\n      return node\n    },\n    empty(node){\n      const array = []\n      let x = node.firstChild\n      while(x){\n        array.push(dom.remove(node.firstChild))\n        x = node.firstChild\n      }\n      return array\n    },\n    attr(node, name, value){ // 重载\n      if(arguments.length === 3){\n        node.setAttribute(name, value)\n      }else if(arguments.length === 2){\n        return node.getAttribute(name)\n      }\n    },\n    text(node, string){ // 适配\n      if(arguments.length ===2 ){\n        if('innerText' in node){\n          node.innerText = string \n        }else{\n          node.textContent = string \n        }\n      }else if(arguments.length === 1){\n        if('innerText' in node){\n          return node.innerText\n        }else{\n          return node.textContent\n        }\n      }\n    },\n    html(node, string){\n      if(arguments.length === 2){\n        node.innerHTML = string\n      }else if(arguments.length === 1){\n        return node.innerHTML \n      }\n    },\n    style(node, name, value){\n      if(arguments.length===3){\n        // dom.style(div, 'color', 'red')\n        node.style[name] = value\n      }else if(arguments.length===2){\n        if(typeof name === 'string'){\n          // dom.style(div, 'color')\n          return node.style[name]\n        }else if(name instanceof Object){\n          // dom.style(div, {color: 'red'})\n          const object = name\n          for(let key in object){\n            node.style[key] = object[key]\n          }\n        }\n      }\n    },\n    class: {\n      add(node, className){\n        node.classList.add(className)\n      },\n      remove(node, className){\n        node.classList.remove(className)\n      },\n      has(node, className){\n        return node.classList.contains(className)\n      }\n    },\n    on(node, eventName, fn){\n      node.addEventListener(eventName, fn)\n    },\n    off(node, eventName, fn){\n      node.removeEventListener(eventName, fn)\n    },\n    find(selector, scope){\n      return (scope || document).querySelectorAll(selector)\n    },\n    parent(node){\n      return node.parentNode\n    },\n    children(node){\n      return node.children\n    },\n    siblings(node){\n      return Array.from(node.parentNode.children)\n      .filter(n=>n!==node)\n    },\n    next(node){\n      let x = node.nextSibling\n      while(x && x.nodeType === 3){\n        x = x.nextSibling\n      }\n      return x\n    },\n    previous(node){\n      let x = node.previousSibling\n      while(x && x.nodeType === 3){\n        x = x.previousSibling\n      }\n      return x\n    },\n    each(nodeList, fn){\n      for(let i=0;i<nodeList.length;i++){\n        fn.call(null, nodeList[i])\n      }\n    },\n    index(node){\n      const list = dom.children(node.parentNode)\n      let i\n      for(i=0;i<list.length;i++){\n        if(list[i] === node){\n          break\n        }\n      }\n      return i\n    }\n  };"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"version":3,"file":"index.7cf873b2.js.map"}